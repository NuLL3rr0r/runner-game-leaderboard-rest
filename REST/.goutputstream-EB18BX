IF ( BUILD_ROSSNBOSS_REST )
    FILE ( GLOB ROSSNBOSS_REST_SOURCE_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.cpp resources/*.css )

    SET ( ROSSNBOSS_REST_BIN_FILE "${ROSSNBOSS_REST_BIN_NAME}" )

    IF ( NOT WIN32 AND NOT MINGW )
        ADD_EXECUTABLE ( ${ROSSNBOSS_REST_BIN_FILE} ${ROSSNBOSS_REST_SOURCE_FILES} )    
    ELSE (  )
        CONFIGURE_FILE ( "${ROSSNBOSS_REST_APP_ICON_FILE}" "${CMAKE_CURRENT_BINARY_DIR}/${ROSSNBOSS_REST_APP_ICON_FILE}"
            COPYONLY )
        CONFIGURE_FILE ( "${ROSSNBOSS_REST_RC_FILE}" "${CMAKE_CURRENT_BINARY_DIR}/${ROSSNBOSS_REST_RC_FILE}"
            @ONLY NEWLINE_STYLE CRLF )
        SET ( CMAKE_RC_COMPILER_INIT windres )
        ENABLE_LANGUAGE( RC )
        SET ( CMAKE_RC_COMPILE_OBJECT "<CMAKE_RC_COMPILER> <FLAGS> -O coff <DEFINES> -i <SOURCE> -o <OBJECT>")
        ADD_EXECUTABLE ( ${ROSSNBOSS_REST_BIN_FILE} ${ROSSNBOSS_REST_SOURCE_FILES} "${CMAKE_CURRENT_BINARY_DIR}/${ROSSNBOSS_REST_RC_FILE}" )
    ENDIF (  )

    FOREACH ( FLAG ${CXX11_FEATURE_LIST} )
        SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE}
            APPEND PROPERTY COMPILE_DEFINITIONS ${FLAG} )
    ENDFOREACH ( FLAG ${CXX11_FEATURE_LIST} )

    TARGET_LINK_LIBRARIES ( ${ROSSNBOSS_REST_BIN_FILE}
        ${CORELIB_BIN_NAME}
        ${Boost_LIBRARIES}
        ${WT_LIBRARY} ${WT_FCGI_LIBRARY}
    )

    IF ( DEFINED STOCKMARKET_REST_DEFINES )
        SET_PROPERTY ( TARGET ${STOCKMARKET_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "${STOCKMARKET_REST_DEFINES}" )
    ENDIF (  )

    IF ( DEFINED ROSSNBOSS_REST_DEFINES )
        SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "${ROSSNBOSS_REST_DEFINES}" )
    ENDIF (  )

    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_BUILD_COMPILER=\"${ROSSNBOSS_BUILD_COMPILER}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_BUILD_HOST=\"${ROSSNBOSS_BUILD_HOST}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_BUILD_PROCESSOR=\"${ROSSNBOSS_BUILD_PROCESSOR}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_BUILD_SYSTEM=\"${ROSSNBOSS_BUILD_SYSTEM}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_COMPANY_NAME=\"${ROSSNBOSS_PRODUCT_COMPANY_NAME}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_COPYRIGHT_HOLDER=\"${ROSSNBOSS_PRODUCT_COPYRIGHT_HOLDER}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_COPYRIGHT_YEAR=\"${ROSSNBOSS_PRODUCT_COPYRIGHT_YEAR}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_COPYRIGHT=\"${ROSSNBOSS_PRODUCT_COPYRIGHT}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_PRODUCT_INTERNAL_NAME=\"${ROSSNBOSS_REST_PRODUCT_INTERNAL_NAME}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_PRODUCT_NAME=\"${ROSSNBOSS_REST_PRODUCT_NAME}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_VERSION_MAJOR=${ROSSNBOSS_REST_PRODUCT_VERSION_MAJOR}" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_VERSION_MINOR=${ROSSNBOSS_REST_PRODUCT_VERSION_MINOR}" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_VERSION_PATCH=${ROSSNBOSS_REST_PRODUCT_VERSION_PATCH}" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_VERSION_REVISION=\"${ROSSNBOSS_REST_PRODUCT_VERSION_REVISION}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_VERSION=\"${ROSSNBOSS_REST_PRODUCT_VERSION}\"" )
    SET_PROPERTY ( TARGET ${ROSSNBOSS_REST_BIN_FILE} APPEND PROPERTY COMPILE_DEFINITIONS "PRODUCT_DESCRIPTION=\"${ROSSNBOSS_REST_PRODUCT_DESCRIPTION}\"" )

    GET_PROPERTY( ROSSNBOSS_REST_EXECUTABLE TARGET ${ROSSNBOSS_REST_BIN_FILE} PROPERTY LOCATION )

    IF ( CXX_GCC AND GCC_STRIP_EXECUTABLES )
        ADD_CUSTOM_COMMAND ( TARGET ${ROSSNBOSS_REST_BIN_FILE}
            POST_BUILD
            COMMAND strip ${ROSSNBOSS_REST_EXECUTABLE}
            COMMAND strip -R.comment ${ROSSNBOSS_REST_EXECUTABLE}
            WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        )
    ENDIF (  )

    IF ( WIN32 AND MINGW )
        IF ( CORELIB_LINK_TYPE STREQUAL "SHARED" )
            GET_PROPERTY( CORELIB_LIBRARY_PATH TARGET ${CORELIB_BIN_NAME} PROPERTY LOCATION )

            ADD_CUSTOM_COMMAND ( TARGET ${ROSSNBOSS_REST_BIN_FILE}
                POST_BUILD
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${CORELIB_LIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${BOOST_CHRONO_LIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${BOOST_DATE_TIME_LIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${BOOST_FILESYSTEM_LIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${BOOST_REGEXLIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${BOOST_SYSTEM_LIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${BOOST_THREAD_LIBRARY_PATH}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${CPPDB_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${CPPDB_SQLITE3_DRIVER}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${CRYPTOPP_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${CURLPP_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${GEOIP_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${LIBB64_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${LIBCURL_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${SQLITE3_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${VMIME_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${WT_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${WT_FCGI_LIBRARY}" "${CMAKE_CURRENT_BINARY_DIR}"
                COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${CMAKE_CURRENT_SOURCE_DIR}/resources/favicon.ico" "${CMAKE_CURRENT_BINARY_DIR}"
            )
        ENDIF (  )
    ELSE (  )
        IF ( DEFINED SERVER_ROOT_DIR )
            EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E make_directory "${SERVER_ROOT_DIR}/db" )
            EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E make_directory "${SERVER_ROOT_DIR}/etc" )
            EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E make_directory "${SERVER_ROOT_DIR}/log" )
            EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E make_directory "${SERVER_ROOT_DIR}/tmp" )
            EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E make_directory "${SERVER_ROOT_DIR}/www" )

            INSTALL ( FILES
                "${CMAKE_CURRENT_SOURCE_DIR}/resources/wt_config.xml"
                DESTINATION "${SERVER_ROOT_DIR}/etc"
                PERMISSIONS
                OWNER_READ
                GROUP_READ
                WORLD_READ
            )

            INSTALL ( DIRECTORY
                "${WT_RESOURCES_DIR}"
                DESTINATION "${SERVER_ROOT_DIR}/www"
                FILE_PERMISSIONS
                OWNER_READ
                GROUP_READ
                WORLD_READ
                DIRECTORY_PERMISSIONS
                OWNER_READ OWNER_EXECUTE
                GROUP_READ GROUP_EXECUTE
                WORLD_READ WORLD_EXECUTE
            )

            INSTALL ( FILES
                "${CMAKE_CURRENT_SOURCE_DIR}/resources/favicon.ico"
                DESTINATION "${SERVER_ROOT_DIR}/www"
                PERMISSIONS
                OWNER_READ
                GROUP_READ
                WORLD_READ
            )

            INSTALL ( FILES
                "${CMAKE_CURRENT_BINARY_DIR}/${ROSSNBOSS_REST_BIN_FILE}"
                DESTINATION "${SERVER_ROOT_DIR}/www"
                PERMISSIONS
                OWNER_READ OWNER_EXECUTE
                GROUP_READ GROUP_EXECUTE
                WORLD_READ WORLD_EXECUTE
            )
        ENDIF (  )
    ENDIF (  )
ENDIF (  )


